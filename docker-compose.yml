version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: traderagent-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: traderagent
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-traderagent_secure_password_2025}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - traderagent_network

  # TraderAgent Elite Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: traderagent-app
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      NODE_ENV: production
      PORT: 5000
      HOST: 0.0.0.0
      DATABASE_URL: "postgresql://postgres:${POSTGRES_PASSWORD:-traderagent_secure_password_2025}@postgres:5432/traderagent"
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      SESSION_SECRET: ${SESSION_SECRET:-change-this-to-a-long-random-string}
      ENCRYPTION_KEY: ${ENCRYPTION_KEY}
    ports:
      - "80:5000"
    volumes:
      - app_logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - traderagent_network

volumes:
  postgres_data:
    driver: local
  app_logs:
    driver: local

networks:
  traderagent_network:
    driver: bridge
